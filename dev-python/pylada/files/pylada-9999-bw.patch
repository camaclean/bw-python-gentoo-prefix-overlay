diff --git a/config/mpi.py b/config/mpi.py
index 7e6a726..2e9734d 100644
--- a/config/mpi.py
+++ b/config/mpi.py
@@ -25,6 +25,10 @@ import socket
 #  peregrine gives: login4.hpc.nrel.gov
 #  stampede gives:  login2.stampede.tacc.utexas.edu
 hostFqdn = socket.getfqdn()    # fully qualified domain name
+try:
+    hostFqdn2 = socket.gethostbyaddr(ni.ifaddresses('eth4')[ni.AF_INET][0]['addr'])[0]
+except ValueError:
+    pass
 
 if hostFqdn.endswith('hpc.nrel.gov'):       # if peregrine
   mpirun_exe = "mpirun -n {n} {placement} {program}"
@@ -32,8 +36,11 @@ elif hostFqdn.endswith('stampede.tacc.utexas.edu'):       # if stampede
   mpirun_exe = "ibrun {program}"
   # or: mpirun_exe = "ibrun -n {n} -o 0 {placement} {program}"
 else:
-  raise Exception('config/mpi.py: error - unknown hostFqdn: %s' \
-    % (hostFqdn,))
+  if hostFqdn2.endswith('ncsa.illinois.edu'):
+    mpirun_exe = "aprun -n {n} {program}"
+  else:
+    raise Exception('config/mpi.py: error - unknown hostFqdn: %s' \
+      % (hostFqdn,))
 
 
 
@@ -356,7 +363,80 @@ python {scriptcommand}
 
 # end if hostFqdn.endswith('hpc.nrel.gov')
 
+elif hostFqdn2.endswith('ncsa.illinois.edu'):
+  qsub_exe = "qsub"
+  """ Qsub/sbatch executable. """
+
+  qdel_exe = 'qdel'
+
+  pbs_string =  '''#!/bin/bash
+#PBS -A {account}
+#PBS -q {queue}
+#PBS -m n
+#PBS -l walltime={walltime}
+#PBS -l nodes={n}:ppn={ppn}:xk
+#PBS -e {err}
+#PBS -o {out}
+#PBS -N {name}
+#PBS -d {directory}
+
+cd {directory}
+
+echo config/mpi.py pbs_string: header: {header}
+echo config/mpi.py pbs_string: scriptcommand: python {scriptcommand}
+echo config/mpi.py pbs_string: footer: {footer}
+
+echo config/mpi.py pbs_string: directory: {directory}
+echo config/mpi.py pbs_string: which python A: $(which python)
+
+. /opt/modules/default/init/bash
+module load bwpy/0.3.0
+module load bwpy-mpi/0.3.0
+
+echo ''
+echo config/mpi.py pbs_string: which python B: $(which python)
+
+echo ''
+echo config/mpi.py pbs_string: module list:
+module list 2>&1
+
+echo ''
+echo config/mpi.py: PATH: $PATH
 
+echo ''
+echo config/mpi.py: PYTHONPATH: $PYTHONPATH
+
+echo ''
+echo config/mpi.py === begin printenv
+printenv
+echo config/mpi.py === end printenv
+
+echo ''
+echo config/mpi.py === begin sorted printenv
+printenv | sort
+echo config/mpi.py === end sorted printenv
+
+echo config/mpi.py === begin cat nodefile
+cat $PBS_NODEFILE
+echo config/mpi.py === end cat nodefile
+
+python -c 'import argparse'
+echo config/mpi.py pbs_string: after test argparse
+
+python -c 'import numpy'
+echo config/mpi.py pbs_string: after test numpy
+
+python -c 'import quantities'
+echo config/mpi.py pbs_string: after test quantities
+
+python -c 'import mpi4py'
+echo config/mpi.py pbs_string: after test mpi4py
+
+{header}
+python {scriptcommand}
+{footer}
+
+'''
 
 
 
