import site
import os
import sys

# Modified version of addsitedir from site module.
# Prepends rather than appends to path, so that
# chained python prefixes override parent prefix site
# directories.
def addsitedir(sitedir, known_paths=None):
    """Add 'sitedir' argument to sys.path if missing and handle .pth files in
    'sitedir'"""
    if known_paths is None:
        known_paths = site._init_pathinfo()
        reset = 1
    else:
        reset = 0
    sitedir, sitedircase = site.makepath(sitedir)
    if not sitedircase in known_paths:
        sys.path.insert(0,sitedir)        # Add path component
    try:
        names = os.listdir(sitedir)
    except os.error:
        return
    dotpth = os.extsep + "pth"
    names = [name for name in names if name.endswith(dotpth)]
    for name in sorted(names):
        site.addpackage(sitedir, name, known_paths)
    if reset:
        known_paths = None
    return known_paths

eprefix = os.environ.get('EPREFIX')
if eprefix is not None:
    path = os.path.join(eprefix, 'usr')
    if path not in site.PREFIXES:
        site.PREFIXES.insert(0, path)
    addsitedir(site.getsitepackages()[0])

prefixes = os.environ.get('EXTRA_PYTHON_EPREFIXES')
if prefixes is not None:
    for p in reversed(prefixes.split(':')):
        path = os.path.join(p, 'usr/lib/@PYTHON@/site-packages')
        addsitedir(path)

pythonpath = os.environ.get('PYTHONPATH')
if pythonpath is not None:
    for p in reversed(pythonpath.split(':')):
        sys.path.insert(0,p)
