diff --git a/CMakeLists.txt b/CMakeLists.txt
index 43d4edb..abd8d97 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,8 +1,8 @@
 CMAKE_MINIMUM_REQUIRED(VERSION 2.8 FATAL_ERROR)
 CMAKE_POLICY(VERSION 2.8)
+PROJECT(TorcHCuda C CXX)
 
 SET(CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake ${CMAKE_MODULE_PATH})
-SET(CMAKE_LIBRARY_PATH /usr/lib/x86_64-linux-gnu/ ${CMAKE_LIBRARY_PATH})
 
 SET(CUDA_ATTACH_VS_BUILD_RULE_TO_CUDA_FILE OFF)
 OPTION(NDEBUG "disable asserts (WARNING: this may result in invalid memory accesses)")
@@ -17,13 +17,14 @@ IF(NOT NDEBUG)
 ENDIF()
 
 IF(NOT Torch_FOUND)
-  FIND_PACKAGE(Torch)
+  FIND_PACKAGE(TH)
 ENDIF()
 
 IF(NOT TH_LIBRARIES)
   SET(TH_LIBRARIES "TH")
 ENDIF(NOT TH_LIBRARIES)
 MESSAGE(STATUS "TH_LIBRARIES: ${TH_LIBRARIES}")
+INCLUDE_DIRECTORIES("${TH_INCLUDE_DIR}")
 
 IF(NOT CUDA_FOUND)
   FIND_PACKAGE(CUDA 5.5 REQUIRED)
@@ -261,16 +262,11 @@ ELSE()
   SET_TARGET_PROPERTIES(THC PROPERTIES
     VERSION   ${THC_SO_VERSION}
     SOVERSION ${THC_SO_VERSION})
-
-
-  INSTALL(TARGETS THC
-    RUNTIME DESTINATION "${THC_INSTALL_BIN_SUBDIR}"
-    LIBRARY DESTINATION "${THC_INSTALL_LIB_SUBDIR}"
-    ARCHIVE DESTINATION "${THC_INSTALL_LIB_SUBDIR}")
 ENDIF()
 
 
-INSTALL(FILES
+SET(THC_HDRS )
+LIST(APPEND THC_HDRS
           THC.h
           ${CMAKE_CURRENT_BINARY_DIR}/THCGeneral.h
           THCBlas.h
@@ -321,8 +317,23 @@ INSTALL(FILES
           THCTensorMathMagma.cuh
           THCThrustAllocator.cuh
           THCTensorMode.cuh
-          THCTensorTopK.cuh
-          DESTINATION "${THC_INSTALL_INCLUDE_SUBDIR}/THC")
+          THCTensorTopK.cuh)
+SET_TARGET_PROPERTIES(THC PROPERTIES PUBLIC_HEADER "${THC_HDRS}")
+IF ("$ENV{STATIC_TH}" STREQUAL "YES")
+  INSTALL(TARGETS THC
+    EXPORT THCTargets
+    RUNTIME DESTINATION "${THC_INSTALL_BIN_SUBDIR}" COMPONENT bin
+    ARCHIVE DESTINATION "${THC_INSTALL_LIB_SUBDIR}" COMPONENT slib
+    PUBLIC_HEADER DESTINATION "${THC_INSTALL_INCLUDE_SUBDIR}/THC" COMPONENT dev)
+ELSE()
+  INSTALL(TARGETS THC
+    EXPORT THCTargets
+    RUNTIME DESTINATION "${THC_INSTALL_BIN_SUBDIR}" COMPONENT bin
+    LIBRARY DESTINATION "${THC_INSTALL_LIB_SUBDIR}" COMPONENT shlib
+    ARCHIVE DESTINATION "${THC_INSTALL_LIB_SUBDIR}" COMPONENT slib
+    PUBLIC_HEADER DESTINATION "${THC_INSTALL_INCLUDE_SUBDIR}/THC" COMPONENT dev)
+ENDIF()
+
 
 INSTALL(FILES
           generic/THCStorage.c
@@ -371,3 +382,14 @@ INSTALL(FILES
           generic/THCTensorTopK.h
           generic/THCTensorTopK.cu
           DESTINATION "${THC_INSTALL_INCLUDE_SUBDIR}/THC/generic")
+# Create THCConfig.cmake
+EXPORT(TARGETS THC FILE "${CMAKE_CURRENT_BINARY_DIR}/THCTargets.cmake")
+EXPORT(PACKAGE TorcHCuda)
+#FILE(RELATIVE_PATH REL_INCLUDE_DIR "${CMAKE_INSTALL_PREFIX}/${THC_INSTALL_INCLUDE_SUBDIR}"
+#  "${CMAKE_INSTALL_PREFIX}/${THC_INSTALL_CMAKE_SUBDIR}")
+SET(THC_INCLUDE_DIR "\${CMAKE_INSTALL_PREFIX}/${THC_INSTALL_INCLUDE_SUBDIR}")
+CONFIGURE_FILE(THCConfig.cmake.in "${PROJECT_BINARY_DIR}/THCConfig.cmake")
+CONFIGURE_FILE(THCConfigVersion.cmake.in "${PROJECT_BINARY_DIR}/THCConfigVersion.cmake")
+INSTALL(FILES "${PROJECT_BINARY_DIR}/THCConfig.cmake" "${PROJECT_BINARY_DIR}/THCConfigVersion.cmake"
+  DESTINATION "${THC_INSTALL_CMAKE_SUBDIR}")
+INSTALL(EXPORT THCTargets DESTINATION "${THC_INSTALL_CMAKE_SUBDIR}")
diff --git a/THCConfig.cmake.in b/THCConfig.cmake.in
index e69de29..48d1a0b 100644
--- a/THCConfig.cmake.in
+++ b/THCConfig.cmake.in
@@ -0,0 +1,14 @@
+# Find the THC includes and library
+#
+# TH_INCLUDE_DIR -- where to find the includes
+# TH_LIBRARIES -- list of libraries to link against
+# TH_FOUND -- set to 1 if found
+
+SET(THC_FOUND 1)
+SET(THC_INCLUDE_DIR "${CMAKE_INSTALL_PREFIX}/${THC_INSTALL_INCLUDE_SUBDIR}/THC")
+
+if(NOT TARGET THC AND NOT TorcHCuda_BINARY_DIR)
+    include("${CMAKE_INSTALL_PREFIX}/${THC_INSTALL_CMAKE_SUBDIR}/THCTargets.cmake")
+endif()
+
+SET(THC_LIBRARIES THC)
diff --git a/THCConfigVersion.cmake.in b/THCConfigVersion.cmake.in
index e69de29..455916c 100644
--- a/THCConfigVersion.cmake.in
+++ b/THCConfigVersion.cmake.in
@@ -0,0 +1,2 @@
+set(PACKAGE_VERSION "0.3.0")
+
