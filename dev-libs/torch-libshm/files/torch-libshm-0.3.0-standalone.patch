diff --git a/CMakeLists.txt b/CMakeLists.txt
index af62b72..fe0a752 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,9 +1,10 @@
 CMAKE_MINIMUM_REQUIRED(VERSION 2.6 FATAL_ERROR)
 CMAKE_POLICY(VERSION 2.6)
-
+PROJECT(TorcHLibShm C CXX)
 
 IF(NOT LIBSHM_INSTALL_LIB_SUBDIR)
   SET(LIBSHM_INSTALL_LIB_SUBDIR "lib" CACHE PATH "libshm install library directory")
+  SET(LIBSHM_INSTALL_CMAKE_SUBDIR "share/cmake/TorchLibShm" CACHE PATH "Libshm install cmake subdirectory")
 ENDIF()
 
 # Flags
@@ -50,6 +51,14 @@ IF (UNIX AND NOT APPLE)
 ENDIF(UNIX AND NOT APPLE)
 
 
-INSTALL(TARGETS shm LIBRARY DESTINATION ${LIBSHM_INSTALL_LIB_SUBDIR})
+INSTALL(TARGETS shm EXPORT shm-targets LIBRARY DESTINATION ${LIBSHM_INSTALL_LIB_SUBDIR})
 INSTALL(FILES libshm.h DESTINATION "include")
-INSTALL(TARGETS torch_shm_manager DESTINATION "bin")
+INSTALL(TARGETS torch_shm_manager DESTINATION "libexec")
+
+# Create TorchLibShmConfig.cmake
+EXPORT(TARGETS shm FILE "${CMAKE_CURRENT_BINARY_DIR}/TorchLibShmTargets.cmake")
+EXPORT(PACKAGE TorcHlibShm)
+SET(LIBSHM_INCLUDE_DIR "${CMAKE_INSTALL_PREFIX}/include/torch-libshm")
+CONFIGURE_FILE(TorchLibShmConfig.cmake.in "${PROJECT_BINARY_DIR}/TorchLibShmConfig.cmake")
+INSTALL(FILES "${PROJECT_BINARY_DIR}/TorchLibShmConfig.cmake" DESTINATION "${LIBSHM_INSTALL_CMAKE_SUBDIR}")
+INSTALL(EXPORT shm-targets DESTINATION "${LIBSHM_INSTALL_CMAKE_SUBDIR}")
diff --git a/TorchLibShmConfig.cmake.in b/TorchLibShmConfig.cmake.in
index e69de29..ceb5797 100644
--- a/TorchLibShmConfig.cmake.in
+++ b/TorchLibShmConfig.cmake.in
@@ -0,0 +1,14 @@
+# Find the Torch libshm includes and library
+#
+# LIBSHM_INCLUDE_DIR -- where to find the includes
+# LIBSHM_LIBRARIES -- list of libraries to link against
+# LIBSHM_FOUND -- set to 1 if found
+
+SET(LIBSHM_FOUND 1)
+SET(LIBSHM_INCLUDE_DIR "@LIBSHM_INCLUDE_DIR@")
+
+if(NOT TARGET shm AND NOT TorcHLibShm_BINARY_DIR)
+   include("${CMAKE_INSTALL_PREFIX}/${LIBSHM_INSTALL_CMAKE_SUBDIR}/TorchLibShmTargets.cmake")
+endif()
+
+SET(LIBSHM_LIBRARIES shm)
