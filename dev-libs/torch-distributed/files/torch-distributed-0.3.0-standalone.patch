diff --git a/CMakeLists.txt b/CMakeLists.txt
index c46cf9c..4816193 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,5 +1,6 @@
 CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
 SET(CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake ${CMAKE_MODULE_PATH})
+PROJECT(TorcHDistributed C CXX)
 
 ################################################################################
 # Helper functions
@@ -42,7 +43,10 @@ FIND_PACKAGE(MPI)
 
 FIND_PACKAGE(Gloo)
 
-IF(NOT Torch_FOUND)
+FIND_PACKAGE(TH REQUIRED)
+FIND_PACKAGE(ATen REQUIRED)
+
+IF(NOT Torch_FOUND AND NOT TH_FOUND)
   FIND_PACKAGE(Torch REQUIRED)
 ENDIF()
 
@@ -50,20 +54,24 @@ IF(NOT TH_LIBRARIES)
   SET(TH_LIBRARIES "TH")
 ENDIF(NOT TH_LIBRARIES)
 MESSAGE(STATUS "TH_LIBRARIES: ${TH_LIBRARIES}")
+INCLUDE_DIRECTORIES(${TH_INCLUDE_DIR})
 
 IF(NO_CUDA)
   MESSAGE(STATUS "ignoring CUDA")
 ELSE()
   FIND_PACKAGE(CUDA 7.5)
   IF(CUDA_FOUND)
+    FIND_PACKAGE(THC REQUIRED)
     INCLUDE_DIRECTORIES(${CUDA_INCLUDE_DIRS})
     INCLUDE_DIRECTORIES("${CUDA_SDK_ROOT_DIR}/common/inc")
     LINK_DIRECTORIES("${CUDA_TOOLKIT_ROOT_DIR}/lib" "${CUDA_TOOLKIT_ROOT_DIR}/lib64")
 
+    FIND_PACKAGE(THC)
     IF(NOT THC_LIBRARIES)
       SET(THC_LIBRARIES "THC")
     ENDIF(NOT THC_LIBRARIES)
     MESSAGE(STATUS "THC_LIBRARIES: ${THC_LIBRARIES}")
+    INCLUDE_DIRECTORIES(${THC_INCLUDE_DIR})
     ADD_DEFINITIONS(-DWITH_CUDA=1)
   ENDIF()
 ENDIF()
@@ -84,6 +92,7 @@ IF(NOT THD_INSTALL_BIN_DIR OR NOT THD_INSTALL_LIB_DIR OR NOT THD_INSTALL_INCLUDE
   SET(THD_INSTALL_BIN_DIR "bin" CACHE PATH "THD install binary subdirectory")
   SET(THD_INSTALL_LIB_DIR "lib" CACHE PATH "THD install library subdirectory")
   SET(THD_INSTALL_INCLUDE_DIR "include" CACHE PATH "THD install include subdirectory")
+  SET(THD_INSTALL_CMAKE_SUBDIR "share/cmake/THD" CACHE PATH "THD install cmake subdirectory")
 ENDIF()
 
 FILE(GLOB_RECURSE master_worker_h RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "master_worker/*.h")
@@ -161,6 +170,7 @@ IF(THD_WITH_TESTS)
 ENDIF()
 
 INSTALL(TARGETS THD
+  EXPORT THDTargets
   RUNTIME DESTINATION "${THD_INSTALL_BIN_DIR}"
   LIBRARY DESTINATION "${THD_INSTALL_LIB_DIR}"
   ARCHIVE DESTINATION "${THD_INSTALL_LIB_DIR}")
@@ -169,3 +179,11 @@ FOREACH(HEADER ${all_h})
   STRING(REGEX MATCH "(.*)[/\\]" DIR ${HEADER})
   INSTALL(FILES ${HEADER} DESTINATION ${THD_INSTALL_INCLUDE_DIR}/THD/${DIR})
 ENDFOREACH()
+
+# Create THDConfig.cmake
+EXPORT(TARGETS THD FILE "${CMAKE_CURRENT_BINARY_DIR}/THDTargets.cmake")
+EXPORT(PACKAGE TorcHDistributed)
+SET(THD_INCLUDE_DIR "${CMAKE_INSTALL_PREFIX}/${THD_INSTALL_INCLUDE_SUBDIR}/THD")
+CONFIGURE_FILE(THDConfig.cmake.in "${PROJECT_BINARY_DIR}/THDConfig.cmake")
+INSTALL(FILES "${PROJECT_BINARY_DIR}/THDConfig.cmake" DESTINATION "${THD_INSTALL_CMAKE_SUBDIR}")
+INSTALL(EXPORT THDTargets DESTINATION "${THD_INSTALL_CMAKE_SUBDIR}")
diff --git a/THDConfig.cmake.in b/THDConfig.cmake.in
index e69de29..c7c3eb4 100644
--- a/THDConfig.cmake.in
+++ b/THDConfig.cmake.in
@@ -0,0 +1,14 @@
+# Find the THD includes and library
+#
+# THD_INCLUDE_DIR -- where to find the includes
+# THD_LIBRARIES -- list of libraries to link against
+# THD_FOUND -- set to 1 if found
+
+SET(THD_FOUND 1)
+SET(THD_INCLUDE_DIR "@THD_INCLUDE_DIR@")
+
+if(NOT TARGET THD AND NOT TorcHDistributed_BINARY_DIR)
+   include("${CMAKE_INSTALL_PREFIX}/${THD_INSTALL_CMAKE_SUBDIR}/THDTargets.cmake")
+endif()
+
+SET(THD_LIBRARIES THD)
